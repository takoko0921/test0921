//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NDC_TRANSFORM            0   xyzw        1     NONE   float   xyzw
// NDC_TRANSFORM            1   xyzw        2     NONE   float   xyzw
// NDC_TRANSFORM            2   xyzw        3     NONE   float   xyzw
// NDC_TRANSFORM            3   xyzw        4     NONE   float   xyzw
// COLOR                    0   xyzw        5     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// COLOR                    0   xyzw        1     NONE   float   xyzw
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_x
    dcl_texcoord v0  // position<0,1,2,3>
    dcl_texcoord1 v1  // ndc_transform<0,4,8,12>
    dcl_texcoord2 v2  // ndc_transform<1,5,9,13>
    dcl_texcoord3 v3  // ndc_transform<2,6,10,14>
    dcl_texcoord4 v4  // ndc_transform<3,7,11,15>
    dcl_texcoord5 v5  // color<0,1,2,3>

#line 6 "C:\Users\2190440\Desktop\bbb\繝ｬ繝吶Ν繝・じ繧､繝ｳ繝ｼ繝ｯ繝ｳ繧ｯ繝ｪ繝・け\GameLib\primitive_batch_vs.hlsl"
    mov r0, v0  // position<0,1,2,3>
    dp4 r1.x, r0, v1  // ::vout<0>
    dp4 r1.y, r0, v2  // ::vout<1>
    dp4 r1.z, r0, v3  // ::vout<2>
    dp4 r1.w, r0, v4  // ::vout<3>
    mov r0, v5  // ::vout<4,5,6,7>
    mov oT0, r0  // ::main<4,5,6,7>
    mov r1, r1  // ::main<0,1,2,3>

#line 3
    mul r0.xy, r1.w, c0
    add oPos.xy, r0, r1  // ::main<0,1>
    mov oPos.zw, r1  // ::main<2,3>

// approximately 11 instruction slots used
vs_4_0
dcl_input v0.xyzw
dcl_input v1.xyzw
dcl_input v2.xyzw
dcl_input v3.xyzw
dcl_input v4.xyzw
dcl_input v5.xyzw
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_temps 2
//
// Initial variable locations:
//   v0.x <- position.x; v0.y <- position.y; v0.z <- position.z; v0.w <- position.w; 
//   v1.x <- ndc_transform._m00; v1.y <- ndc_transform._m10; v1.z <- ndc_transform._m20; v1.w <- ndc_transform._m30; 
//   v2.x <- ndc_transform._m01; v2.y <- ndc_transform._m11; v2.z <- ndc_transform._m21; v2.w <- ndc_transform._m31; 
//   v3.x <- ndc_transform._m02; v3.y <- ndc_transform._m12; v3.z <- ndc_transform._m22; v3.w <- ndc_transform._m32; 
//   v4.x <- ndc_transform._m03; v4.y <- ndc_transform._m13; v4.z <- ndc_transform._m23; v4.w <- ndc_transform._m33; 
//   v5.x <- color.x; v5.y <- color.y; v5.z <- color.z; v5.w <- color.w; 
//   o1.x <- <main return value>.color.x; o1.y <- <main return value>.color.y; o1.z <- <main return value>.color.z; o1.w <- <main return value>.color.w; 
//   o0.x <- <main return value>.sv_position.x; o0.y <- <main return value>.sv_position.y; o0.z <- <main return value>.sv_position.z; o0.w <- <main return value>.sv_position.w
//
#line 6 "C:\Users\2190440\Desktop\bbb\繝ｬ繝吶Ν繝・繧､繝ｳ繝ｼ繝ｯ繝ｳ繧ｯ繝ｪ繝・\GameLib\primitive_batch_vs.hlsl"
dp4 r0.x, v0.xyzw, v1.xyzw  // r0.x <- vout.sv_position.x
dp4 r0.y, v0.xyzw, v2.xyzw  // r0.y <- vout.sv_position.y
dp4 r0.z, v0.xyzw, v3.xyzw  // r0.z <- vout.sv_position.z
dp4 r0.w, v0.xyzw, v4.xyzw  // r0.w <- vout.sv_position.w

#line 7
mov r1.xyzw, v5.xyzw  // r1.x <- vout.color.x; r1.y <- vout.color.y; r1.z <- vout.color.z; r1.w <- vout.color.w

#line 8
mov o0.xyzw, r0.xyzw
mov o1.xyzw, r1.xyzw
ret 
// Approximately 8 instruction slots used
